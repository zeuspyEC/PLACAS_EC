# ==========================================
# ECPlacas 2.0 - Docker Compose Configuration
# Proyecto: Construcción de Software - EPN
# Desarrollado por: Erick Costa
# Enfoque: Rendimiento | Sostenibilidad | Escalabilidad
# ==========================================

services:
  # ==========================================
  # APLICACIÓN PRINCIPAL - ECPLACAS
  # ==========================================
  ecplacas-app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        BUILD_DATE: "${BUILD_DATE:-}"
        VCS_REF: "${VCS_REF:-}"
        VERSION: "2.0.1"
    image: ecplacas-epn:2.0.1
    container_name: ecplacas-production
    restart: unless-stopped
    
    ports:
      - "5000:5000"
    
    environment:
      - FLASK_ENV=production
      - FLASK_HOST=0.0.0.0
      - FLASK_PORT=5000
      - WORKERS=4
      - TIMEOUT=30
      - DATABASE_URL=sqlite:///app/database/ecplacas.sqlite
      - REDIS_URL=redis://ecplacas-redis:6379/0
      - TZ=America/Guayaquil
    
    volumes:
      - ecplacas_data:/app/database
      - ecplacas_logs:/app/logs
      - ecplacas_cache:/app/cache
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    depends_on:
      ecplacas-redis:
        condition: service_healthy
    
    networks:
      - ecplacas-network
    
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '1.0'
        reservations:
          memory: 256M
          cpus: '0.5'

  # ==========================================
  # CACHE REDIS
  # ==========================================
  ecplacas-redis:
    image: redis:7-alpine
    container_name: ecplacas-redis
    restart: unless-stopped
    
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    
    volumes:
      - ecplacas_redis:/data
    
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    
    networks:
      - ecplacas-network
    
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'

  # ==========================================
  # REVERSE PROXY NGINX
  # ==========================================
  ecplacas-nginx:
    image: nginx:alpine
    container_name: ecplacas-nginx
    restart: unless-stopped
    
    ports:
      - "80:80"
      - "443:443"
    
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ecplacas_static:/var/www/static:ro
    
    depends_on:
      - ecplacas-app
    
    networks:
      - ecplacas-network
    
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.3'

  # ==========================================
  # MONITOREO - PROMETHEUS
  # ==========================================
  ecplacas-prometheus:
    image: prom/prometheus:latest
    container_name: ecplacas-prometheus
    restart: unless-stopped
    
    ports:
      - "9090:9090"
    
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
    
    networks:
      - ecplacas-network
    
    profiles:
      - monitoring

  # ==========================================
  # VISUALIZACIÓN - GRAFANA
  # ==========================================
  ecplacas-grafana:
    image: grafana/grafana:latest
    container_name: ecplacas-grafana
    restart: unless-stopped
    
    ports:
      - "3000:3000"
    
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=ecplacas2024
    
    volumes:
      - grafana_data:/var/lib/grafana
    
    depends_on:
      - ecplacas-prometheus
    
    networks:
      - ecplacas-network
    
    profiles:
      - monitoring

# ==========================================
# VOLÚMENES PERSISTENTES
# ==========================================
volumes:
  ecplacas_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./database
  
  ecplacas_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./logs
  
  ecplacas_cache:
    driver: local
  
  ecplacas_redis:
    driver: local
  
  ecplacas_static:
    driver: local
  
  prometheus_data:
    driver: local
  
  grafana_data:
    driver: local

# ==========================================
# REDES
# ==========================================
networks:
  ecplacas-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16